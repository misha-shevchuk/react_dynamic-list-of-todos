{"version":3,"sources":["types/FilterTodos.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterTodos","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","query","filterParameter","onInputChange","onSelectChange","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","finally","href","email","name","App","setTodos","loading","setLoading","setQuery","setFilterParameter","preparedTodos","todosCopy","filter","toLowerCase","includes","trim","prepareTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ebf9205.chunk.js","sourcesContent":["export enum FilterTodos {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    selectedTodo,\n    setSelectedTodo,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': selectedTodo?.id === id,\n              })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far', {\n                        'fa-eye-slash': selectedTodo?.id === id,\n                        'fa-eye': selectedTodo?.id !== id,\n                      },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })\n      }\n    </tbody>\n  </table>\n);\n","import { FilterTodos } from '../../types/FilterTodos';\n\ntype Props = {\n  query: string;\n  filterParameter: FilterTodos | string;\n  onInputChange: (str: string) => void;\n  onSelectChange: (field: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    query,\n    filterParameter,\n    onInputChange,\n    onSelectChange,\n  },\n) => {\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onInputChange(event.target.value);\n  };\n\n  const handleSelect\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    return onSelectChange(event.target.value);\n  };\n\n  const clear = () => onInputChange('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterParameter}\n            onChange={handleSelect}\n          >\n            <option value={FilterTodos.All}>All</option>\n            <option value={FilterTodos.Active}>Active</option>\n            <option value={FilterTodos.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clear}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setSelectedTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { id, title, completed } = todo;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterTodos } from './types/FilterTodos';\n\ntype FilterObject = {\n  query: string;\n  filterParameter?: FilterTodos | string;\n};\n\nconst prepareTodos = (todos: Todo[], { query, filterParameter }: FilterObject) => {\n  let todosCopy = [...todos];\n\n  if (query) {\n    todosCopy = todosCopy.filter(todo => {\n      return todo.title.toLowerCase().includes(query.trim().toLowerCase());\n    });\n  }\n\n  if (filterParameter !== FilterTodos.All) {\n    todosCopy = todosCopy.filter(todo => {\n      switch (true) {\n        case filterParameter === FilterTodos.Active:\n          return !todo.completed;\n\n        case filterParameter === FilterTodos.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  }\n\n  return todosCopy;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [filterParameter, setFilterParameter] = useState<FilterTodos | string>(FilterTodos.All);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const preparedTodos = prepareTodos(todos, { query, filterParameter });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filterParameter={filterParameter}\n                onInputChange={setQuery}\n                onSelectChange={setFilterParameter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              <TodoList\n                todos={preparedTodos}\n                selectedTodo={selectedTodo}\n                setSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}